#!/bin/sh

. "$HOME/.config/river/variables"

############
# MAPPINGS #
############

# Super+Return to start an instance of ghostty
riverctl map normal Super Return spawn $terminal 

# Super+Space opens wofi
riverctl map normal Super Space spawn "killall wofi; $dmenu"

#Super+Shift+Space scripts selector from the folder ~/.scripts/.globrun
riverctl map normal Super+Shift Space spawn "killall wofi; $HOME/.scripts/script_launcher"

#Super+W wallpaper selector
riverctl map normal Super W spawn "killall wofi; $HOME/.scripts/wallpaper_selector"

# Home/Stamp to take a screeshot of a region in the clipboard
riverctl map normal None Home spawn "killall hyprshot; hyprshot -m region --clipboard-only"
riverctl map normal None Stamp spawn "killall hyprshot; hyprshot -m region --clipboard-only"
# Super+Home/Stamp to take a screeshot
riverctl map normal Super Home spawn "grim \"$HOME/Pictures/Screenshots/$(date +%Y-%m-%d_%H:%M:%S).png\"; notify-send \"Screenshot saved\" \"Image writen in $HOME/Pictures/Screenshots/\""
riverctl map normal Super Stamp spawn "grim \"$HOME/Pictures/Screenshots/$(date +%Y-%m-%d_%H:%M:%S).png\"; notify-send \"Screenshot saved\" \"Image writen in $HOME/Pictures/Screenshots/\""

#Super+N opens the notification center (swaync)
riverctl map normal Super N spawn "swaync-client -t -sw"

#Super+D opens wlogout
riverctl map normal Super D spawn "killall wlogout; wlogout --protocol layer-shell -s"

#Super+A opens the audio controller
riverctl map normal Super A spawn "$terminal --x11-instance-name=com.popup.app --class=com.popup.app -e pulsemixer"

#Super+Down pauses mpd
riverctl map normal Super Down spawn "mpc toggle"
riverctl map normal Super Up spawn "$HOME/.scripts/songinfo.sh"
riverctl map normal Super Right spawn "mpc next"    #Super+Right next song
riverctl map normal Super Left spawn "mpc prev"     #Super+Left prev song

# Super+Shift+R reload the config
riverctl map normal Super+Shift R spawn "$HOME/.config/river/reload"

# Super+Esc to lock the session
riverctl map normal Super Escape spawn "hyprlock"

# Super+Q to close the focused view
riverctl map normal Super Q close

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous

# Super+[ and Super+] to focus the next/previous output
riverctl map normal Super bracketright focus-output next
riverctl map normal Super bracketleft focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Super+Shift bracketright send-to-output next
riverctl map normal Super+Shift bracketleft send-to-output previous

# Super+Return to bump the focused view to the top of the layout stack
riverctl map normal Super M zoom

# Super+H and Super+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal Super H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal Super L send-layout-cmd rivertile "main-ratio +0.05"

# Super+Shift+H and Super+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal Super+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal Super+Shift L send-layout-cmd rivertile "main-count -1"

# Super+Alt+{H,J,K,L} to move views
riverctl map normal Super+Alt H move left 100
riverctl map normal Super+Alt J move down 100
riverctl map normal Super+Alt K move up 100
riverctl map normal Super+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal Super+Alt+Control H snap left
riverctl map normal Super+Alt+Control J snap down
riverctl map normal Super+Alt+Control K snap up
riverctl map normal Super+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
riverctl map normal Super+Alt+Shift H resize horizontal -100
riverctl map normal Super+Alt+Shift J resize vertical 100
riverctl map normal Super+Alt+Shift K resize vertical -100
riverctl map normal Super+Alt+Shift L resize horizontal 100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 10)
do
    tags=$((1 << ($i - 1)))
    if [ "$i" = 10 ]; then
        i=0
    fi

    # Super+[1-9 & 0] to focus tag [0-9]
    riverctl map normal Super "$i" set-focused-tags $tags

    # Super+Shift+[1-9 & 0] to tag focused view with tag [0-9]
    riverctl map normal Super+Shift "$i" set-view-tags $tags

    # Super+Control+[1-9 & 0] to toggle focus of tag [0-9]
    riverctl map normal Super+Control "$i" toggle-focused-tags $tags

    # Super+Shift+Control+[1-9 & 0] to toggle tag [0-9] of focused view
    riverctl map normal Super+Shift+Control "$i" toggle-view-tags $tags
done

# Super+F to focus all tags
# Super+Shift+F to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Super F set-focused-tags $all_tags
riverctl map normal Super+Shift F set-view-tags $all_tags

# The scratchpad will live on an unused tag. Which tags are used depends on your
# config, but rivers default uses the first 9 tags.
scratch_tag=$((1 << 20 ))

# Toggle the scratchpad with Super+P
riverctl map normal Super P toggle-focused-tags ${scratch_tag}

# Send windows to the scratchpad with Super+Shift+P
riverctl map normal Super+Shift P set-view-tags ${scratch_tag}

# Set spawn tagmask to ensure new windows don't have the scratchpad tag unless
# explicitly set.
all_but_scratch_tag=$(( ((1 << 32) - 1) ^ $scratch_tag ))
riverctl spawn-tagmask ${all_but_scratch_tag}

# Super+Space to toggle float
riverctl map normal Super V toggle-float

# Super+F to toggle fullscreen
riverctl map normal None F11 toggle-fullscreen

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F12 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F12 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-'
    riverctl map $mode None XF86AudioMute         spawn 'wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle'
    riverctl map $mode None XF86AudioMicMute      spawn 'wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle'

    # Control screen backlight brightness with brightnessctl (https://github.com/Hummer12007/brightnessctl)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'brightnessctl set +5%'
    riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl set 5%-'
done
